# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import cvss_pb2 as cvss__pb2


class CVSSSvcStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getVector = channel.unary_unary(
        '/cvss.CVSSSvc/getVector',
        request_serializer=cvss__pb2.Event.SerializeToString,
        response_deserializer=cvss__pb2.CVSSRes.FromString,
        )


class CVSSSvcServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getVector(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CVSSSvcServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getVector': grpc.unary_unary_rpc_method_handler(
          servicer.getVector,
          request_deserializer=cvss__pb2.Event.FromString,
          response_serializer=cvss__pb2.CVSSRes.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'cvss.CVSSSvc', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
